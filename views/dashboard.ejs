<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RA.co Event Monitor</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }
        
        .content {
            padding: 30px;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }
        
        .stat-card h3 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .stat-card .value {
            font-size: 2rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .config-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .config-section h3 {
            color: #2c3e50;
            margin-bottom: 15px;
        }
        
        .config-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #e9ecef;
        }
        
        .config-item:last-child {
            border-bottom: none;
        }
        
        .config-label {
            font-weight: 500;
            color: #495057;
        }
        
        .config-value {
            color: #667eea;
            font-weight: 500;
        }
        
        .actions {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }
        
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-primary {
            background: #667eea;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #5a6268;
        }
        
        .status {
            padding: 15px;
            border-radius: 6px;
            margin-top: 20px;
            display: none;
        }
        
        .status.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .status.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéµ RA.co Event Monitor</h1>
            <p>Automated event tracking for your favorite artists</p>
        </div>
        
        <div class="content">
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>Total Events</h3>
                    <div class="value"><%= stats.totalEvents %></div>
                </div>
                <div class="stat-card">
                    <h3>Notifications Sent</h3>
                    <div class="value"><%= stats.totalNotifications %></div>
                </div>
                <div class="stat-card">
                    <h3>Recent Events (7 days)</h3>
                    <div class="value"><%= stats.recentEvents %></div>
                </div>
                <div class="stat-card">
                    <h3>Monitored Artists</h3>
                    <div class="value"><%= stats.monitoredArtists %></div>
                </div>
            </div>
            
            <div class="config-section">
                <h3>üìç Current Configuration</h3>
                <div class="config-item">
                    <span class="config-label">Location:</span>
                    <span class="config-value"><%= config.location.name %> (ID: <%= config.location.areaId %>)</span>
                </div>
                <div class="config-item">
                    <span class="config-label">Check Interval:</span>
                    <span class="config-value">Every <%= config.notificationSettings.checkIntervalHours %> hours</span>
                </div>
                <div class="config-item">
                    <span class="config-label">Date Range:</span>
                    <span class="config-value"><%= config.notificationSettings.dateRangeDays %> days</span>
                </div>
                <div class="config-item">
                    <span class="config-label">Include Past Day:</span>
                    <span class="config-value"><%= config.notificationSettings.includePastDay ? 'Yes' : 'No' %></span>
                </div>
            </div>
            
            <div class="config-section">
                <h3>üé§ Monitored Artists</h3>
                <% config.artists.forEach(function(artist) { %>
                    <div class="config-item">
                        <span class="config-label"><%= artist.name %></span>
                        <span class="config-value">ID: <%= artist.id %></span>
                    </div>
                <% }); %>
            </div>
            
            <div class="actions">
                <button class="btn btn-primary" onclick="checkEvents()">
                    üîç Check Events Now
                </button>
                <a href="/api/events" class="btn btn-secondary" target="_blank">
                    üìä View Events API
                </a>
                <a href="/health" class="btn btn-secondary" target="_blank">
                    ‚ù§Ô∏è Health Check
                </a>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Checking for new events...</p>
            </div>
            
            <div class="status" id="status"></div>
        </div>
    </div>
    
    <script>
        async function checkEvents() {
            const loading = document.getElementById('loading');
            const status = document.getElementById('status');
            
            loading.style.display = 'block';
            status.style.display = 'none';
            
            try {
                const response = await fetch('/api/check-events', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showStatus('Event check completed successfully!', 'success');
                    // Refresh stats after a short delay
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    showStatus('Error: ' + result.error, 'error');
                }
            } catch (error) {
                showStatus('Error: ' + error.message, 'error');
            } finally {
                loading.style.display = 'none';
            }
        }
        
        function showStatus(message, type) {
            const status = document.getElementById('status');
            status.textContent = message;
            status.className = `status ${type}`;
            status.style.display = 'block';
        }
    </script>
</body>
</html>
